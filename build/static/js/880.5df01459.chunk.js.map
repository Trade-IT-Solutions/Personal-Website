{"version":3,"file":"static/js/880.5df01459.chunk.js","mappings":"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","sources":["webpack://kelly_website/./src/components/SectionWork.module.css?7dac","components/SectionWork.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"connectWithKelly\":\"SectionWork_connectWithKelly__T4iHD\",\"grid\":\"SectionWork_grid__m3d44\",\"imageIcon\":\"SectionWork_imageIcon__o7YmF\",\"noiseIcon\":\"SectionWork_noiseIcon__ju-pn\",\"lamboSurprise\":\"SectionWork_lamboSurprise__Pph+k\",\"youtubeVideo\":\"SectionWork_youtubeVideo__2TvGb\",\"grid4\":\"SectionWork_grid4__JCRY7\",\"imageWrapper\":\"SectionWork_imageWrapper__x3tx-\",\"grid3\":\"SectionWork_grid3__5d-AW\",\"grid2\":\"SectionWork_grid2__lriF6\",\"grid1\":\"SectionWork_grid1__7hfjA\",\"container\":\"SectionWork_container__LT9FW\",\"sectionWork\":\"SectionWork_sectionWork__ieMfC\",\"loadingText\":\"SectionWork_loadingText__jMKuN\"};","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Badge from \"./Badge.js\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./SectionWork.module.css\";\n\nconst SectionWork = ({ className = \"\" }) => {\n  const [latestVideoId, setLatestVideoId] = useState(\"\");\n  const [shouldPlay, setShouldPlay] = useState(false);\n  const videoRef = useRef(null);\n  const observerRef = useRef(null);\n\n  const onGridContainerClick = useCallback(() => {\n    window.location.href = \"https://www.youtube.com/@kellyohgee\";\n  }, []);\n\n  useEffect(() => {\n    const fetchLatestVideo = async () => {\n      const cacheKey = \"yt_latest_video_sectionWork\";\n      const cacheTimeKey = \"yt_latest_video_sectionWork_time\";\n      const twelveHours = 12 * 60 * 60 * 1000;\n    \n      const cachedVideo = localStorage.getItem(cacheKey);\n      const cachedTime = localStorage.getItem(cacheTimeKey);\n    \n      if (cachedVideo && cachedTime && Date.now() - parseInt(cachedTime) < twelveHours) {\n        setLatestVideoId(cachedVideo);\n        return;\n      }\n    \n      try {\n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/search?key=AIzaSyD_6EZIO3Zr5wTmYCSLq0Kw_8jLmDXOpDc&channelId=UCM84WjkyLm1_sa17G8DYzRg&part=snippet,id&order=date&maxResults=1`\n        );\n    \n        if (!response.ok) throw new Error(`API error ${response.status}`);\n    \n        const data = await response.json();\n        const videoId = data.items?.[0]?.id?.videoId;\n    \n        if (videoId) {\n          setLatestVideoId(videoId);\n          localStorage.setItem(cacheKey, videoId);\n          localStorage.setItem(cacheTimeKey, Date.now());\n        }\n      } catch (error) {\n        console.error(\"YouTube fetch failed:\", error);\n        setLatestVideoId(\"dQw4w9WgXcQ\"); // Optional: Fallback to default video\n      }\n    };\n    \n\n    fetchLatestVideo();\n  }, []);\n\n  useEffect(() => {\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          setShouldPlay(entry.isIntersecting);\n        });\n      },\n      {\n        threshold: 0.5,\n        root: null,\n        rootMargin: \"0px\",\n      }\n    );\n\n    if (videoRef.current) {\n      observerRef.current.observe(videoRef.current);\n    }\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [latestVideoId]);\n\n  return (\n    <section className={`${styles.sectionWork} ${className}`}>\n      <div className={styles.container}>\n        <div className={styles.grid}>\n          <h1 className={styles.connectWithKelly}>Connect with Kelly on YouTube!</h1>\n        </div>\n        <div className={styles.grid1}>\n          <div className={styles.grid2}>\n            <div className={styles.grid3} onClick={onGridContainerClick}>\n              <div className={styles.imageWrapper}>\n                {latestVideoId ? (\n                  <iframe\n                    ref={videoRef}\n                    className={styles.imageIcon}\n                    src={`https://www.youtube.com/embed/${latestVideoId}?rel=0&enablejsapi=1&autoplay=${\n                      shouldPlay ? 1 : 0\n                    }&controls=1&showinfo=0&mute=1`}\n                    title=\"Latest Video\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                  />\n                ) : (\n                  <p className={styles.loadingText}>Loading latest video...</p>\n                )}\n                <div className={styles.grid4}>\n                  <h2 className={styles.lamboSurprise}>Latest Video</h2>\n                  <div className={styles.youtubeVideo}>CLICK HERE!</div>\n                </div>\n                <Badge size={1} style={1} pharrowUpRightLight=\"pending\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nSectionWork.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default SectionWork;"],"names":["_ref","className","latestVideoId","setLatestVideoId","useState","shouldPlay","setShouldPlay","videoRef","useRef","observerRef","onGridContainerClick","useCallback","window","location","href","useEffect","async","cacheKey","cacheTimeKey","cachedVideo","localStorage","getItem","cachedTime","Date","now","parseInt","_data$items","_data$items$","_data$items$$id","response","fetch","ok","Error","status","videoId","json","items","id","setItem","error","console","fetchLatestVideo","current","disconnect","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","root","rootMargin","observe","_jsx","styles","children","_jsxs","onClick","ref","src","title","frameBorder","allow","allowFullScreen","Badge","size","style","pharrowUpRightLight"],"sourceRoot":""}