{"version":3,"file":"static/js/325.403940b9.chunk.js","mappings":"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","sources":["webpack://kelly_website/./src/components/SectionStats.module.css?b5b0","components/SectionStats.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionStats\":\"SectionStats_sectionStats__c9DsN\",\"container\":\"SectionStats_container__Clvc+\",\"socialIcons\":\"SectionStats_socialIcons__SZPWU\"};","import React, { useEffect, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport styles from \"./SectionStats.module.css\";\n\nconst CACHE_EXPIRY_TIME = 60 * 60 * 1000; // 1 hour in milliseconds\n\nconst SectionStats = ({ className = \"\" }) => {\n  const [youtubeSubscribers, setYoutubeSubscribers] = useState(\"Loading...\");\n  const [instagramFollowers, setInstagramFollowers] = useState(\"Loading...\");\n  const [twitterFollowers, setTwitterFollowers] = useState(\"Loading...\");\n\n  // Function to check cache validity\n  const isCacheValid = (key) => {\n    const cachedData = JSON.parse(localStorage.getItem(key));\n    return cachedData && Date.now() - cachedData.timestamp < CACHE_EXPIRY_TIME;\n  };\n\n  // Function to store data in localStorage\n  const storeCache = (key, data) => {\n    localStorage.setItem(\n      key,\n      JSON.stringify({ value: data, timestamp: Date.now() })\n    );\n  };\n\n  // Function to get cached data\n  const getCachedData = (key) => {\n    const cachedData = JSON.parse(localStorage.getItem(key));\n    return cachedData ? cachedData.value : null;\n  };\n\n  // Fetch YouTube Subscribers\n  useEffect(() => {\n    const fetchYoutubeSubscribers = async () => {\n      const cacheKey = \"youtubeSubscribers\";\n      if (isCacheValid(cacheKey)) {\n        setYoutubeSubscribers(getCachedData(cacheKey));\n        return;\n      }\n\n      try {\n        const API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n        const CHANNEL_ID = process.env.REACT_APP_YOUTUBE_CHANNEL_ID;\n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${CHANNEL_ID}&key=${API_KEY}`\n        );\n        const data = await response.json();\n        const subscriberCount = data.items[0]?.statistics?.subscriberCount || 0;\n\n        const formattedCount =\n          subscriberCount >= 1000\n            ? `${(subscriberCount / 1000).toFixed(1).replace(/\\.0$/, \"\")}k+`\n            : subscriberCount;\n\n        setYoutubeSubscribers(formattedCount);\n        storeCache(cacheKey, formattedCount);\n      } catch (error) {\n        console.error(\"Failed to fetch YouTube subscribers:\", error);\n        setYoutubeSubscribers(\"Error\");\n      }\n    };\n\n    fetchYoutubeSubscribers();\n  }, []);\n\n  // Fetch Instagram Followers\n  useEffect(() => {\n    const fetchInstagramFollowers = async () => {\n      const cacheKey = \"instagramFollowers\";\n      const formatNumber = (num) => {\n        if (num >= 1_000_000_000) return (num / 1_000_000_000).toFixed(1) + \"B+\";\n        if (num >= 1_000_000) return (num / 1_000_000).toFixed(1) + \"M+\";\n        if (num >= 1_000) return (num / 1_000).toFixed(1) + \"k+\";\n        return num.toString();\n      };\n\n      if (isCacheValid(cacheKey)) {\n        setInstagramFollowers(getCachedData(cacheKey));\n        return;\n      }\n\n      try {\n        const response = await fetch(\n          \"https://rocketapi-for-developers.p.rapidapi.com/instagram/user/get_info\",\n          {\n            method: \"POST\",\n            headers: {\n              \"x-rapidapi-key\": \"70e512e8bdmshaaffc4d5a9623d3p16477cjsnd7d34b12bfd6\",\n              \"x-rapidapi-host\": \"rocketapi-for-developers.p.rapidapi.com\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username: \"kellyohgee\" }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`API Error: ${response.status} - ${errorText}`);\n        }\n\n        const data = await response.json();\n        const count = data?.response?.body?.data?.user?.edge_followed_by?.count;\n\n        if (count !== undefined) {\n          const formatted = formatNumber(count);\n          setInstagramFollowers(formatted);\n          storeCache(cacheKey, formatted);\n        } else {\n          console.error(\"Instagram follower count not found.\");\n          setInstagramFollowers(\"N/A\");\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch Instagram followers:\", error);\n        setInstagramFollowers(\"Error\");\n      }\n    };\n\n    fetchInstagramFollowers();\n  }, []);\n\n  // Fetch Twitter Followers\n  useEffect(() => {\n    const fetchTwitterFollowers = async () => {\n      const cacheKey = \"twitterFollowers\";\n      if (isCacheValid(cacheKey)) {\n        setTwitterFollowers(getCachedData(cacheKey));\n        return;\n      }\n\n      try {\n        const url = `https://${process.env.REACT_APP_TWITTER_API_HOST}/${process.env.REACT_APP_TWITTER_USERNAME}/profile`;\n        const headers = {\n          \"x-rapidapi-key\": process.env.REACT_APP_TWITTER_API_KEY,\n          \"x-rapidapi-host\": process.env.REACT_APP_TWITTER_API_HOST,\n        };\n\n        const response = await fetch(url, { method: \"GET\", headers });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        const followerCount = data?.followersCount || 0;\n\n        const formattedCount =\n          followerCount >= 1000000\n            ? `${(followerCount / 1000000).toFixed(1).replace(/\\.0$/, \"\")}M+`\n            : followerCount >= 1000\n            ? `${(followerCount / 1000).toFixed(1).replace(/\\.0$/, \"\")}k+`\n            : followerCount;\n\n        setTwitterFollowers(formattedCount);\n        storeCache(cacheKey, formattedCount);\n      } catch (error) {\n        console.error(\"Error fetching Twitter followers:\", error);\n        setTwitterFollowers(\"Error\");\n      }\n    };\n\n    fetchTwitterFollowers();\n  }, []);\n\n  return (\n    <section className={[styles.sectionStats, className].join(\" \")}>\n      <div className={styles.socialIcons}>\n        <a href=\"https://www.instagram.com/kellyohgee\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/instagram.svg\" alt=\"Instagram\" />\n          <span>{instagramFollowers}</span>\n        </a>\n        <a href=\"https://twitter.com/kellyohgee\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/twitter.svg\" alt=\"Twitter\" />\n          <span>{twitterFollowers}</span>\n        </a>\n        <a href=\"https://www.youtube.com/kellyohgee\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/youtube.svg\" alt=\"YouTube\" />\n          <span>{youtubeSubscribers}</span>\n        </a>\n        <a href=\"https://www.tiktok.com/@kellyohgee\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/tiktok.svg\" alt=\"TikTok\" />\n          <span>224K+</span>\n        </a>\n      </div>\n    </section>\n  );\n};\n\nSectionStats.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default SectionStats;"],"names":["_ref","className","youtubeSubscribers","setYoutubeSubscribers","useState","instagramFollowers","setInstagramFollowers","twitterFollowers","setTwitterFollowers","isCacheValid","key","cachedData","JSON","parse","localStorage","getItem","Date","now","timestamp","storeCache","data","setItem","stringify","value","getCachedData","useEffect","async","cacheKey","_data$items$","_data$items$$statisti","API_KEY","process","CHANNEL_ID","response","fetch","subscriberCount","json","items","statistics","formattedCount","toFixed","replace","error","console","fetchYoutubeSubscribers","num","_data$response","_data$response$body","_data$response$body$d","_data$response$body$d2","_data$response$body$d3","method","headers","body","username","ok","errorText","text","Error","status","count","user","edge_followed_by","undefined","formatted","toString","fetchInstagramFollowers","url","followerCount","followersCount","fetchTwitterFollowers","_jsx","styles","sectionStats","join","children","_jsxs","socialIcons","href","target","rel","src","alt"],"sourceRoot":""}